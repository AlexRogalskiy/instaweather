/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  AstroItem as AstroItem
} from './components/astro-item/astro-item';

declare global {
  interface HTMLAstroItemElement extends AstroItem, HTMLStencilElement {
  }
  var HTMLAstroItemElement: {
    prototype: HTMLAstroItemElement;
    new (): HTMLAstroItemElement;
  };
  interface HTMLElementTagNameMap {
    "astro-item": HTMLAstroItemElement;
  }
  interface ElementTagNameMap {
    "astro-item": HTMLAstroItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "astro-item": JSXElements.AstroItemAttributes;
    }
  }
  namespace JSXElements {
    export interface AstroItemAttributes extends HTMLAttributes {
      day?: any;
    }
  }
}


import {
  ForecastItem as ForecastItem
} from './components/forecast-item/forecast-item';

declare global {
  interface HTMLForecastItemElement extends ForecastItem, HTMLStencilElement {
  }
  var HTMLForecastItemElement: {
    prototype: HTMLForecastItemElement;
    new (): HTMLForecastItemElement;
  };
  interface HTMLElementTagNameMap {
    "forecast-item": HTMLForecastItemElement;
  }
  interface ElementTagNameMap {
    "forecast-item": HTMLForecastItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "forecast-item": JSXElements.ForecastItemAttributes;
    }
  }
  namespace JSXElements {
    export interface ForecastItemAttributes extends HTMLAttributes {
      day?: any;
      isFahrenheits?: boolean;
    }
  }
}


import {
  MainPage as MainPage
} from './components/main-page/main-page';

declare global {
  interface HTMLMainPageElement extends MainPage, HTMLStencilElement {
  }
  var HTMLMainPageElement: {
    prototype: HTMLMainPageElement;
    new (): HTMLMainPageElement;
  };
  interface HTMLElementTagNameMap {
    "main-page": HTMLMainPageElement;
  }
  interface ElementTagNameMap {
    "main-page": HTMLMainPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "main-page": JSXElements.MainPageAttributes;
    }
  }
  namespace JSXElements {
    export interface MainPageAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyApp as MyApp
} from './components/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLStencilElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  WeatherDetails as WeatherDetails
} from './components/weather-details/weather-details';

declare global {
  interface HTMLWeatherDetailsElement extends WeatherDetails, HTMLStencilElement {
  }
  var HTMLWeatherDetailsElement: {
    prototype: HTMLWeatherDetailsElement;
    new (): HTMLWeatherDetailsElement;
  };
  interface HTMLElementTagNameMap {
    "weather-details": HTMLWeatherDetailsElement;
  }
  interface ElementTagNameMap {
    "weather-details": HTMLWeatherDetailsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "weather-details": JSXElements.WeatherDetailsAttributes;
    }
  }
  namespace JSXElements {
    export interface WeatherDetailsAttributes extends HTMLAttributes {
      current?: any;
      forecast?: any;
      location?: any;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
